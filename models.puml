@startuml
set namespaceSeparator ::

class "dcsmobile::models::DeviceList.dart::DeviceList" {
  -String _accountID
  -String _deviceID
  -String _groupID
  -String _vehicleModel
  -double _latitude
  -double _longitude
  -num _timestamp
  -double _speedKPH
  +String groupID
  +String accountID
  +String deviceID
  +String vehicleModel
  +double latitude
  +double longitude
  +num timestamp
  +double speedKPH
  +String timestampAsString
  +String toString()
}

class "dcsmobile::models::EventData.dart::EventData" {
  -String _deviceID
  -num _timestamp
  -double _latitude
  -double _longitude
  -double _altitude
  -double _speedKPH
  +String deviceID
  +double timestamp
  +double latitude
  +double longitude
  +double altitude
  +double speedKPH
}

class "dcsmobile::models::Group.dart::Group" {
  -String _accountID
  -String _userID
  -String _groupID
  +String userID
  +String accountID
  +String groupID
}

class "dcsmobile::models::Device.dart::Device" {
  -String _accountID
  -String _deviceID
  -String _vehicleModel
  -double _latitude
  -double _longitude
  -num _timestamp
  -double _speedKPH
  +String accountID
  +String deviceID
  +String vehicleModel
  +double latitude
  +double longitude
  +num timestamp
  +double speedKPH
  +String timestampAsString
  +Future<String> address
  +String toString()
}

class "dcsmobile::models::User.dart::User" {
  -String _accountID
  -String _userID
  -String _password
  +List<DeviceList> devices
  +String userID
  +String accountID
  +String password
}

class "dcsmobile::models::Account.dart::Account" {
  -String _accountID
  -String _password
  +List<Device> devices
  +String accountID
  +String password
}

class "dcsmobile::models::Report.dart::Report" {
  -String _deviceID
  -double _maxSpeed
  -double _avgSpeed
  -double _distance
  -double _runningTime
  -double _parkingTime
  +String deviceID
  +double maxSpeed
  +double runningTime
  +double parkingTime
  +double distance
  +double avgSpeed
  +String parkingTimeAsString
  +List<String> parkingTimeAsStringList
  +String runningTimeAsString
  +List<String> runningTimeAsStringList
}

class "dcsmobile::widgets::dashboard::customswipper.dart::CustomSwipper" {
  +MediaQueryData mediaQuery
  +dynamic data
  +_CustomSwipperState createState()
}

"dcsmobile::widgets::dashboard::customswipper.dart::CustomSwipper" o-- "flutter::src::widgets::media_query.dart::MediaQueryData"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::widgets::dashboard::customswipper.dart::CustomSwipper"

class "dcsmobile::widgets::dashboard::customswipper.dart::_CustomSwipperState" {
  +MediaQueryData mediaQuery
  +dynamic data
  +double itemHeight
  +double itemWidth
  +double boxConstraints
  +void initState()
  +Widget build()
  +Container customContainer()
}

"dcsmobile::widgets::dashboard::customswipper.dart::_CustomSwipperState" o-- "flutter::src::widgets::media_query.dart::MediaQueryData"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::widgets::dashboard::customswipper.dart::_CustomSwipperState"

class "dcsmobile::widgets::dashboard::dashboardfirstrow.dart::DashboardFirstRow" {
  +GlobalKey<ScaffoldState> scaffoldKey
  +dynamic data
  +_DashboardFirstRowState createState()
}

"dcsmobile::widgets::dashboard::dashboardfirstrow.dart::DashboardFirstRow" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::widgets::dashboard::dashboardfirstrow.dart::DashboardFirstRow"

class "dcsmobile::widgets::dashboard::dashboardfirstrow.dart::_DashboardFirstRowState" {
  +GlobalKey<ScaffoldState> scaffoldKey
  +dynamic data
  -int _indexStack
  -double _top
  -double _bottom
  -double _left
  -double _right
  +Widget build()
}

"dcsmobile::widgets::dashboard::dashboardfirstrow.dart::_DashboardFirstRowState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::widgets::dashboard::dashboardfirstrow.dart::_DashboardFirstRowState"

class "dcsmobile::widgets::dashboard::dashboardsecondrow.dart::DashboardSecondRow" {
  +_DashboardSecondRowState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::widgets::dashboard::dashboardsecondrow.dart::DashboardSecondRow"

class "dcsmobile::widgets::dashboard::dashboardsecondrow.dart::_DashboardSecondRowState" {
  -int _indexStack
  -List<bool> _visible
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::widgets::dashboard::dashboardsecondrow.dart::_DashboardSecondRowState"

class "dcsmobile::widgets::dashboard::transparentcontainer.dart::TransparentContainer" {
  +IconData icon
  +dynamic quantity
  +dynamic description
  +_TransparentContainerState createState()
}

"dcsmobile::widgets::dashboard::transparentcontainer.dart::TransparentContainer" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::widgets::dashboard::transparentcontainer.dart::TransparentContainer"

class "dcsmobile::widgets::dashboard::transparentcontainer.dart::_TransparentContainerState" {
  +IconData icon
  +dynamic quantity
  +dynamic description
  -double _fontSize
  -double _iconSize
  +Widget build()
}

"dcsmobile::widgets::dashboard::transparentcontainer.dart::_TransparentContainerState" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::widgets::dashboard::transparentcontainer.dart::_TransparentContainerState"

class "dcsmobile::widgets::dashboard::roundedcontainer.dart::RoundedContainer" {
  +dynamic colors
  +dynamic maxSubject
  +dynamic maxValue
  +dynamic model
  +_RoundedContainerState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::widgets::dashboard::roundedcontainer.dart::RoundedContainer"

class "dcsmobile::widgets::dashboard::roundedcontainer.dart::_RoundedContainerState" {
  +dynamic colors
  +dynamic maxSubject
  +dynamic maxValue
  +dynamic model
  -double _heightContainer
  -double _widthContainer
  -double _fontSize
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::widgets::dashboard::roundedcontainer.dart::_RoundedContainerState"

class "dcsmobile::Api::ApiShowDialog.dart::ApiShowDialog" {
  {static} +dynamic dialog()
}

class "dcsmobile::Api::Api.dart::Api" {
  {static} +HttpClient httpClient
  {static} +String baseUrl
  {static} +Future login()
  {static} +Future userGroup()
  {static} +Future devices()
  {static} +Future dashboardFirstRow()
  {static} +Future getHistory()
  {static} +Future getActualPosition()
  {static} +Future getReport()
}

"dcsmobile::Api::Api.dart::Api" o-- "dart::_http::HttpClient"

class "dcsmobile::Api::Response.dart::Status" {
  +int index
  {static} +List<Status> values
  {static} +Status LOADING
  {static} +Status COMPLETED
  {static} +Status ERROR
}

"dcsmobile::Api::Response.dart::Status" o-- "dcsmobile::Api::Response.dart::Status"

class "dcsmobile::Api::Response.dart::Response<T>" {
  +Status status
  +T data
  +String message
  +String toString()
}

"dcsmobile::Api::Response.dart::Response<T>" o-- "dcsmobile::Api::Response.dart::Status"

class "dcsmobile::Api::HttpCustom.dart::HttpCustom" {
  +String url
  +String body
  +Future post()
}

class "dcsmobile::animations::fadeanimation.dart::FadeAnimation" {
  +double delay
  +Widget child
  +Widget build()
}

"dcsmobile::animations::fadeanimation.dart::FadeAnimation" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "dcsmobile::animations::fadeanimation.dart::FadeAnimation"

class "dcsmobile::animations::speedometer.dart::Speedometer" {
  +double size
  +double minValue
  +double maxValue
  +double currentValue
  +double warningValue
  +Color backgroundColor
  +Color meterColor
  +Color warningColor
  +Color kimColor
  +TextStyle displayNumericStyle
  +String displayText
  +TextStyle displayTextStyle
  +_SpeedometerState createState()
}

"dcsmobile::animations::speedometer.dart::Speedometer" o-- "dart::ui::Color"
"dcsmobile::animations::speedometer.dart::Speedometer" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::animations::speedometer.dart::Speedometer"

class "dcsmobile::animations::speedometer.dart::_SpeedometerState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::animations::speedometer.dart::_SpeedometerState"

class "dcsmobile::animations::speedometer.dart::ArcPainter" {
  +double startAngle
  +double sweepAngle
  +Color color
  +void paint()
  +bool shouldRepaint()
}

"dcsmobile::animations::speedometer.dart::ArcPainter" o-- "dart::ui::Color"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "dcsmobile::animations::speedometer.dart::ArcPainter"

class "dcsmobile::animations::speedometer.dart::TriangleClipper" {
  +Path getClip()
  +bool shouldReclip()
}

"flutter::src::rendering::proxy_box.dart::CustomClipper<T>" <|-- "dcsmobile::animations::speedometer.dart::TriangleClipper"

class "dcsmobile::animations::speedometer.dart::KimClipper" {
  +Path getClip()
  +bool shouldReclip()
}

"flutter::src::rendering::proxy_box.dart::CustomClipper<T>" <|-- "dcsmobile::animations::speedometer.dart::KimClipper"

class "dcsmobile::commons::fancyappbar.dart::FancyAppBar" {
  +String text
  +Color statusBarColor
  +double contentHeight
  +bool rightShow
  +void Function() callback
  +GlobalKey<ScaffoldState> scaffoldKey
  +Size preferredSize
  +_FancyAppBarState createState()
}

"dcsmobile::commons::fancyappbar.dart::FancyAppBar" o-- "dart::ui::Color"
"dcsmobile::commons::fancyappbar.dart::FancyAppBar" o-- "dart::ui::void Function()"
"dcsmobile::commons::fancyappbar.dart::FancyAppBar" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"dcsmobile::commons::fancyappbar.dart::FancyAppBar" o-- "dart::ui::Size"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::commons::fancyappbar.dart::FancyAppBar"
"flutter::src::widgets::preferred_size.dart::PreferredSizeWidget" <|-- "dcsmobile::commons::fancyappbar.dart::FancyAppBar"

class "dcsmobile::commons::fancyappbar.dart::_FancyAppBarState" {
  +GlobalKey<ScaffoldState> scaffoldKey
  -double _iconSize
  +Widget build()
}

"dcsmobile::commons::fancyappbar.dart::_FancyAppBarState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::commons::fancyappbar.dart::_FancyAppBarState"

class "dcsmobile::commons::FECommons.dart::FECommons" {
  {static} -String _title
  {static} +AppBar appBar
}

"dcsmobile::commons::FECommons.dart::FECommons" o-- "flutter::src::material::app_bar.dart::AppBar"

class "dcsmobile::commons::FEDrawer.dart::FEDrawer" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "dcsmobile::commons::FEDrawer.dart::FEDrawer"

class "dcsmobile::charts::donutautolabelchart.dart::DonutAutoLabelChart" {
  +List<Series> seriesList
  +bool animate
  +Widget build()
  {static} -List _createSampleData()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "dcsmobile::charts::donutautolabelchart.dart::DonutAutoLabelChart"

class "dcsmobile::charts::donutautolabelchart.dart::VehicleStatus" {
  +String status
  +num value
  +Color colorVal
}

"dcsmobile::charts::donutautolabelchart.dart::VehicleStatus" o-- "dart::ui::Color"

class "dcsmobile::pages::Utils::DeviceListView.dart::DeviceListView<T>" {
  +GlobalKey<ScaffoldState> scaffoldKey
  -Key _key
  -dynamic _description
  -dynamic _option
  -dynamic _search
  +DeviceListViewState createState()
}

"dcsmobile::pages::Utils::DeviceListView.dart::DeviceListView<T>" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"dcsmobile::pages::Utils::DeviceListView.dart::DeviceListView<T>" o-- "flutter::src::foundation::key.dart::Key"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::pages::Utils::DeviceListView.dart::DeviceListView<T>"

class "dcsmobile::pages::Utils::DeviceListView.dart::DeviceListViewState" {
  +GlobalKey<ScaffoldState> scaffoldKey
  -Key _key
  -dynamic _description
  -dynamic _option
  +String search
  +void initState()
  +Widget build()
  +dynamic fetchDevices()
  -ListView _devicesListView()
  -ListTile _tile()
  +void dispose()
}

"dcsmobile::pages::Utils::DeviceListView.dart::DeviceListViewState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"dcsmobile::pages::Utils::DeviceListView.dart::DeviceListViewState" o-- "flutter::src::foundation::key.dart::Key"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::pages::Utils::DeviceListView.dart::DeviceListViewState"

class "dcsmobile::pages::login.dart::Login" {
  +_LoginState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::pages::login.dart::Login"

class "dcsmobile::pages::login.dart::_LoginState" {
  -GlobalKey<FormState> _formKey
  -GlobalKey<ScaffoldState> _scaffoldKey
  -TextEditingController _usernameController
  -TextEditingController _accountController
  -TextEditingController _passwordController
  +EncryptedSharedPreferences encryptedSharedPreferences
  +void initState()
  +Widget build()
  -Future _login()
  -void _verifySavedInfo()
  +dynamic saveLoginInfo()
}

"dcsmobile::pages::login.dart::_LoginState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"dcsmobile::pages::login.dart::_LoginState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"dcsmobile::pages::login.dart::_LoginState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"dcsmobile::pages::login.dart::_LoginState" o-- "encrypted_shared_preferences::encrypted_shared_preferences.dart::EncryptedSharedPreferences"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::pages::login.dart::_LoginState"

class "dcsmobile::pages::Position.dart::Position" {
  -dynamic _description
  -dynamic _option
  +_PositionState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::pages::Position.dart::Position"

class "dcsmobile::pages::Position.dart::_PositionState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -GlobalKey<DeviceListViewState> _deviceListViewKey
  -dynamic _description
  -dynamic _option
  -DeviceListView _deviceListView
  -double _modelFontSize
  -double _adresseFontSize
  -double _detailsFontSize
  -Widget _title
  -IconData _icon
  +void initState()
  +Widget build()
}

"dcsmobile::pages::Position.dart::_PositionState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"dcsmobile::pages::Position.dart::_PositionState" o-- "flutter::src::widgets::framework.dart::GlobalKey<DeviceListViewState>"
"dcsmobile::pages::Position.dart::_PositionState" o-- "dcsmobile::pages::Utils::DeviceListView.dart::DeviceListView"
"dcsmobile::pages::Position.dart::_PositionState" o-- "flutter::src::widgets::framework.dart::Widget"
"dcsmobile::pages::Position.dart::_PositionState" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::pages::Position.dart::_PositionState"

class "dcsmobile::pages::vehicleliveposition.dart::VehicleLivePosition" {
  +dynamic deviceID
  +dynamic option
  +_VehicleLivePositionState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::pages::vehicleliveposition.dart::VehicleLivePosition"

class "dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" {
  -dynamic _deviceID
  -dynamic _option
  -GoogleMapController _googleMapController
  -Uint8List _carPin
  -Uint8List _markerPin
  -GlobalKey<ScaffoldState> _scaffoldKey
  -Map<MarkerId, Marker> _markers
  -Set<Polyline> _polylines
  -List<LatLng> _route
  -StreamSubscription<EventData> _streamSubscription
  -Position _lastPosition
  -Marker _marker
  -double _speedKPH
  -double _warningSpeed
  -CameraPosition _kGooglePlex
  +void initState()
  -double _getMyBearing()
  +void dispose()
  -Stream _eventDataStream()
  -dynamic _loadCarPin()
  +Widget build()
  -dynamic _setData()
}

"dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" o-- "google_maps_flutter::google_maps_flutter.dart::GoogleMapController"
"dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" o-- "dart::typed_data::Uint8List"
"dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" o-- "dart::async::StreamSubscription<EventData>"
"dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" o-- "geolocator::geolocator.dart::Position"
"dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" o-- "google_maps_flutter_platform_interface::src::types::marker.dart::Marker"
"dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState" o-- "google_maps_flutter_platform_interface::src::types::camera.dart::CameraPosition"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::pages::vehicleliveposition.dart::_VehicleLivePositionState"

class "dcsmobile::pages::splash.dart::Splash" {
  +_SplashState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::pages::splash.dart::Splash"

class "dcsmobile::pages::splash.dart::_SplashState" {
  -AnimationController _scaleController
  -AnimationController _scale2Controller
  -AnimationController _widthController
  -AnimationController _positionController
  -Animation<double> _scaleAnimation
  -Animation<double> _scale2Animation
  -Animation<double> _widthAnimation
  -Animation<double> _positionAnimation
  +bool hideIcon
  +void initState()
  +Widget build()
}

"dcsmobile::pages::splash.dart::_SplashState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"dcsmobile::pages::splash.dart::_SplashState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::pages::splash.dart::_SplashState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin<T>" <|-- "dcsmobile::pages::splash.dart::_SplashState"

class "dcsmobile::pages::dashboard.dart::Dashboard" {
  +_DashboardState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::pages::dashboard.dart::Dashboard"

class "dcsmobile::pages::dashboard.dart::_DashboardState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  +MediaQueryData mediaQuery
  +bool useMobileLayout
  +Widget build()
  -dynamic _fetchData()
  -dynamic _content()
}

"dcsmobile::pages::dashboard.dart::_DashboardState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"dcsmobile::pages::dashboard.dart::_DashboardState" o-- "flutter::src::widgets::media_query.dart::MediaQueryData"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::pages::dashboard.dart::_DashboardState"

class "dcsmobile::pages::ReportView.dart::ReportView" {
  -dynamic _deviceID
  -dynamic _vehicleModel
  +_ReportViewState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "dcsmobile::pages::ReportView.dart::ReportView"

class "dcsmobile::pages::ReportView.dart::_ReportViewState" {
  -dynamic _deviceID
  -dynamic _vehicleModel
  -Report _report
  -double _warningSpeed
  -String _title
  -int _indexStack
  -List<bool> _visible
  -StreamSubscription<Report> _streamSubscription
  +void initState()
  +void dispose()
  -Stream _reportStream()
  +Widget build()
  +Container roundedContainer()
}

"dcsmobile::pages::ReportView.dart::_ReportViewState" o-- "dcsmobile::models::Report.dart::Report"
"dcsmobile::pages::ReportView.dart::_ReportViewState" o-- "dart::async::StreamSubscription<Report>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "dcsmobile::pages::ReportView.dart::_ReportViewState"


@enduml